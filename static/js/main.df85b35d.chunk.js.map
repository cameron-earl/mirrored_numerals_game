{"version":3,"sources":["components/buttons/NextButton.module.css","components/buttons/NextButton.tsx","components/Numeral.tsx","helpers/SillyGooseError.ts","helpers/helpers.ts","helpers/fonts.ts","helpers/positiveMessages.ts","App.tsx","serviceWorker.ts","index.tsx","components/Numeral.module.css"],"names":["module","exports","NextButton","props","className","styles","wrapper","cta","onClick","ref","buttonRef","width","height","viewBox","version","id","stroke","strokeWidth","fill","fillRule","one","d","two","three","Numeral","numeral","handleClick","isReversed","wasAnswered","numeralClass","classNames","reversed","correct","incorrect","SillyGooseError","m","Object","setPrototypeOf","prototype","Error","getNumArr","numArr","len","randInt","getFilledArr","map","_","every","n","isReversable","slice","getReversed","reversedArr","randBool","e","val","Array","includes","Math","random","min","max","ceil","floor","randElement","a","length","fonts","fontSizeByFont","Gaegu","Handlee","Kalam","Schoolbell","Zeyada","positiveMessages","App","useState","points","setPoints","setNumArr","setReversed","answered","setAnswered","font","setFont","nextButtonRef","useRef","pointsRef","console","info","levelDone","reduce","goodSoFar","i","useEffect","current","focus","addPoints","handleNumeralClick","handleCorrect","handleIncorrect","log","numerals","arr","newArr","push","key","reverse","insertCommas","tabIndex","style","fontFamily","fontSize","newNumArr","answeredArr","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.df85b35d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"NextButton_wrapper__19WGh\",\"cta\":\"NextButton_cta__wv6ZU\",\"one\":\"NextButton_one__20rYF\",\"two\":\"NextButton_two__1UWGO\",\"three\":\"NextButton_three__1F3v_\",\"color_anim\":\"NextButton_color_anim__2n2Oz\"};","import React from 'react';\n\nimport styles from './NextButton.module.css';\n\ninterface nextButtonProps {\n  onClick: () => void;\n  buttonRef: any;\n}\n\nfunction NextButton(props: nextButtonProps) {\n  return (\n    <div className={styles.wrapper}>\n      <button className={styles.cta} onClick={props.onClick} ref={props.buttonRef}>\n        <span>NEXT</span>\n        <span>\n          <svg width=\"66px\" height=\"43px\" viewBox=\"0 0 66 43\" version=\"1.1\">\n            <g id=\"arrow\" stroke=\"none\" strokeWidth={1} fill=\"none\" fillRule=\"evenodd\">\n              <path\n                className={styles.one}\n                d=\"M40.1543933,3.89485454 L43.9763149,0.139296592 C44.1708311,-0.0518420739 44.4826329,-0.0518571125 44.6771675,0.139262789 L65.6916134,20.7848311 C66.0855801,21.1718824 66.0911863,21.8050225 65.704135,22.1989893 C65.7000188,22.2031791 65.6958657,22.2073326 65.6916762,22.2114492 L44.677098,42.8607841 C44.4825957,43.0519059 44.1708242,43.0519358 43.9762853,42.8608513 L40.1545186,39.1069479 C39.9575152,38.9134427 39.9546793,38.5968729 40.1481845,38.3998695 C40.1502893,38.3977268 40.1524132,38.395603 40.1545562,38.3934985 L56.9937789,21.8567812 C57.1908028,21.6632968 57.193672,21.3467273 57.0001876,21.1497035 C56.9980647,21.1475418 56.9959223,21.1453995 56.9937605,21.1432767 L40.1545208,4.60825197 C39.9574869,4.41477773 39.9546013,4.09820839 40.1480756,3.90117456 C40.1501626,3.89904911 40.1522686,3.89694235 40.1543933,3.89485454 Z\"\n                fill=\"#FFFFFF\"\n              ></path>\n              <path\n                className={styles.two}\n                d=\"M20.1543933,3.89485454 L23.9763149,0.139296592 C24.1708311,-0.0518420739 24.4826329,-0.0518571125 24.6771675,0.139262789 L45.6916134,20.7848311 C46.0855801,21.1718824 46.0911863,21.8050225 45.704135,22.1989893 C45.7000188,22.2031791 45.6958657,22.2073326 45.6916762,22.2114492 L24.677098,42.8607841 C24.4825957,43.0519059 24.1708242,43.0519358 23.9762853,42.8608513 L20.1545186,39.1069479 C19.9575152,38.9134427 19.9546793,38.5968729 20.1481845,38.3998695 C20.1502893,38.3977268 20.1524132,38.395603 20.1545562,38.3934985 L36.9937789,21.8567812 C37.1908028,21.6632968 37.193672,21.3467273 37.0001876,21.1497035 C36.9980647,21.1475418 36.9959223,21.1453995 36.9937605,21.1432767 L20.1545208,4.60825197 C19.9574869,4.41477773 19.9546013,4.09820839 20.1480756,3.90117456 C20.1501626,3.89904911 20.1522686,3.89694235 20.1543933,3.89485454 Z\"\n                fill=\"#FFFFFF\"\n              ></path>\n              <path\n                className={styles.three}\n                d=\"M0.154393339,3.89485454 L3.97631488,0.139296592 C4.17083111,-0.0518420739 4.48263286,-0.0518571125 4.67716753,0.139262789 L25.6916134,20.7848311 C26.0855801,21.1718824 26.0911863,21.8050225 25.704135,22.1989893 C25.7000188,22.2031791 25.6958657,22.2073326 25.6916762,22.2114492 L4.67709797,42.8607841 C4.48259567,43.0519059 4.17082418,43.0519358 3.97628526,42.8608513 L0.154518591,39.1069479 C-0.0424848215,38.9134427 -0.0453206733,38.5968729 0.148184538,38.3998695 C0.150289256,38.3977268 0.152413239,38.395603 0.154556228,38.3934985 L16.9937789,21.8567812 C17.1908028,21.6632968 17.193672,21.3467273 17.0001876,21.1497035 C16.9980647,21.1475418 16.9959223,21.1453995 16.9937605,21.1432767 L0.15452076,4.60825197 C-0.0425130651,4.41477773 -0.0453986756,4.09820839 0.148075568,3.90117456 C0.150162624,3.89904911 0.152268631,3.89694235 0.154393339,3.89485454 Z\"\n                fill=\"#FFFFFF\"\n              ></path>\n            </g>\n          </svg>\n        </span>\n      </button>\n    </div>\n  );\n}\n\nexport default NextButton;\n","import classNames from 'classnames';\nimport React from 'react';\n\nimport styles from './Numeral.module.css';\n\ninterface numeralProps {\n  numeral: number;\n  isReversed: boolean;\n  handleClick: () => void;\n  wasAnswered: boolean;\n}\n\nfunction Numeral(props: numeralProps) {\n  const { numeral, handleClick, isReversed, wasAnswered } = props;\n\n  const numeralClass = classNames({\n    [styles.numeral]: true,\n    [styles.reversed]: isReversed && !wasAnswered,\n    [styles.correct]: isReversed && wasAnswered,\n    [styles.incorrect]: !isReversed && wasAnswered,\n  });\n\n  return (\n    <button className={numeralClass} onClick={handleClick}>\n      {numeral}\n    </button>\n  );\n}\n\nexport default Numeral;\n","class SillyGooseError extends Error {\n  constructor(m: string) {\n    super(m);\n\n    // Set the prototype explicitly.\n    Object.setPrototypeOf(this, SillyGooseError.prototype);\n  }\n}\n\nexport default SillyGooseError;\n","import SillyGooseError from './SillyGooseError';\n\nexport const getNumArr = (len: number = randInt(3, 9)): number[] => {\n  let numArr;\n  do {\n    numArr = getFilledArr(len).map((_) => randInt());\n  } while (numArr.every((n) => !isReversable(n)));\n  while (numArr[0] === 0) {\n    numArr = [...numArr.slice(1), randInt()];\n  }\n  return numArr;\n};\n\nexport const getReversed = (numArr: number[]): boolean[] => {\n  let reversedArr;\n  do {\n    reversedArr = [...numArr].map((n) => (isReversable(n) ? randBool() : false));\n  } while (reversedArr.every((e) => !e));\n  return reversedArr;\n};\n\nexport const getFilledArr = <T>(len: number, val?: T): T[] => new Array(len).fill(val);\n\nexport const isReversable = (n: number): boolean => [2, 3, 4, 5, 6, 7, 9].includes(n);\n\nexport const randBool = (): boolean => Math.random() < 0.5;\n\nexport const randInt = (min: number = 0, max: number = 9): number => {\n  if (max < min) throw new SillyGooseError('Max cannot be less than min, you silly goose.');\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n};\n\nexport const randElement = <T>(a: T[]): T => a[randInt(0, a.length - 1)];\n","import { randElement } from './helpers';\n\nexport const fonts = [\n  'Annie Use Your Telescope',\n  'Architects Daughter',\n  'Cedarville Cursive',\n  'Gaegu',\n  'Handlee',\n  'Indie Flower',\n  'Kalam',\n  'La Belle Aurore',\n  'Reenie Beanie',\n  'Schoolbell',\n  'Shadows Into Light',\n  'Shadows Into Light Two',\n  'Sue Ellen Francisco',\n  'Waiting for the Sunrise',\n  'Zeyada',\n];\n\nexport const fontSizeByFont: { [key: string]: number } = {\n  'Annie Use Your Telescope': 4.5,\n  'Architects Daughter': 4,\n  'Cedarville Cursive': 4,\n  Gaegu: 4.5,\n  Handlee: 4,\n  'Indie Flower': 4.5,\n  Kalam: 4,\n  'La Belle Aurore': 4,\n  'Reenie Beanie': 5,\n  Schoolbell: 4,\n  'Shadows Into Light': 4,\n  'Shadows Into Light Two': 4,\n  'Sue Ellen Francisco': 4,\n  'Waiting for the Sunrise': 4.5,\n  Zeyada: 4,\n};\n\nexport const getFontArr = (len: number) => new Array(len).fill(null).map((_) => randElement(fonts));\n","export const positiveMessages = [\n  'Amazing',\n  'Amazing effort',\n  'Beautiful work',\n  'Congratulations',\n  'Congratulations on a good job',\n  'Excellent',\n  'Fantastic',\n  'Good for you',\n  'Good job',\n  'Good job paying attention',\n  'Good remembering',\n  'Good thinking',\n  'Great effort',\n  'Great job',\n  'Hooray',\n  'Hooray, you did it',\n  'I am proud of you',\n  'I knew you could do it',\n  'I love the effort',\n  'Keep it up',\n  'Keep trying',\n  'Look at you go',\n  'Marvellous',\n  'Much better',\n  'Nice work',\n  'Outstanding',\n  'Sensational',\n  'Stupendous',\n  'Super',\n  'Super duper',\n  'Terrific',\n  'That is really nice',\n  \"That's good\",\n  \"That's it\",\n  \"That's much better\",\n  'Tremendous',\n  'Way to go',\n  'Wonderful',\n  'Woo hoo',\n  'Wow',\n  'You are a fast learner',\n  'You are a star',\n  'You are doing a good job',\n  'You are doing an amazing job',\n  'You are on the right track',\n  'You did it',\n  'You did very well',\n  'You got it',\n  'You got the hang of it',\n  'You remembered',\n  \"You're getting better all the time\",\n  \"You're improving\",\n];\n","import './App.css';\n\nimport React, { useEffect, useRef, useState } from 'react';\n\nimport NextButton from './components/buttons/NextButton';\nimport Numeral from './components/Numeral';\nimport { fonts, fontSizeByFont } from './helpers/fonts';\nimport { getFilledArr, getNumArr, getReversed, randElement } from './helpers/helpers';\nimport { positiveMessages } from './helpers/positiveMessages';\n\nconst insertCommas = (arr: any[]) => {\n  let newArr = [];\n  for (let i = 1; i <= arr.length; i++) {\n    newArr.push(arr[arr.length - i]);\n    if (i % 3 === 0 && i < arr.length) {\n      newArr.push(\n        <span className=\"comma\" key={i + '-comma'}>\n          ,\n        </span>\n      );\n    }\n  }\n  return newArr.reverse();\n};\n\nfunction App() {\n  const [points, setPoints] = useState(0);\n  const [numArr, setNumArr] = useState(getNumArr());\n  const [reversed, setReversed] = useState(getReversed(numArr));\n  const [answered, setAnswered] = useState(getFilledArr(numArr.length, false));\n  const [font, setFont] = useState(randElement(fonts));\n  const nextButtonRef = useRef<HTMLButtonElement>(null);\n  const pointsRef = useRef<HTMLHeadingElement>(null);\n\n  console.info('font:', font);\n\n  const reset = () => {\n    console.log('reset!');\n    const newNumArr = getNumArr();\n    const reversedArr = getReversed(newNumArr);\n    const answeredArr = getFilledArr(newNumArr.length, false);\n    setNumArr(newNumArr);\n    setReversed(reversedArr);\n    setAnswered(answeredArr);\n    setFont(randElement(fonts));\n  };\n\n  const levelDone = reversed.reduce((goodSoFar, e, i) => goodSoFar && (!e || answered[i]), true);\n\n  useEffect(() => {\n    if (levelDone && nextButtonRef.current) {\n      nextButtonRef.current.focus();\n    } else if (pointsRef.current) {\n      pointsRef.current.focus();\n    }\n  }, [levelDone]);\n\n  const addPoints = (n: number) => setPoints(Math.max(points + n, 0));\n\n  const handleNumeralClick = (i: number) => () => {\n    if (answered[i] || levelDone) return;\n    reversed[i] ? handleCorrect() : handleIncorrect();\n    answered[i] = true;\n    setAnswered([...answered]);\n  };\n\n  const handleCorrect = () => {\n    console.log('woo hoo!');\n    addPoints(1);\n  };\n\n  const handleIncorrect = () => {\n    console.log('Whoopsie!');\n    addPoints(-2);\n  };\n\n  const numerals = insertCommas(\n    numArr.map((n, i) => (\n      <Numeral\n        key={`${n}-${i}`}\n        isReversed={reversed[i]}\n        wasAnswered={answered[i]}\n        numeral={+n}\n        handleClick={handleNumeralClick(i)}\n      ></Numeral>\n    ))\n  );\n\n  return (\n    <div className=\"App\">\n      <h3 className=\"points\" ref={pointsRef} tabIndex={-1}>\n        Points: {points}\n      </h3>\n      <div className=\"numerals\" style={{ fontFamily: font, fontSize: `${fontSizeByFont[font]}em` }}>\n        {numerals}\n      </div>\n      {levelDone && (\n        <div>\n          <h1>{randElement(positiveMessages)}!</h1>\n          <NextButton onClick={reset} buttonRef={nextButtonRef}></NextButton>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"numeral\":\"Numeral_numeral__1pbKT\",\"reversed\":\"Numeral_reversed__qN6U7\",\"correct\":\"Numeral_correct__11iL9\",\"incorrect\":\"Numeral_incorrect__jUCFf\"};"],"sourceRoot":""}